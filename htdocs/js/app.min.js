function loadAssignRoleForms(){var e=document.getElementById("assign-roles-operation").value;let o=document.getElementById("assign-roles-dynamic-form");o.innerHTML="","assign"===e?(console.log("assign clicked"),fetch("/api/app/template/assignrole/type?operation=assign").then(e=>e.text()).then(e=>{o.innerHTML=e}).catch(e=>{console.error("Error:",e),o.innerHTML='<div class="alert alert-danger">An error occurred.</div>'})):"unassign"===e&&fetch("/api/app/template/unassignrole?operation=unassign").then(e=>e.text()).then(e=>{o.innerHTML=e}).catch(e=>{console.error("Error:",e),o.innerHTML='<div class="alert alert-danger">An error occurred.</div>'})}function loadAssignRoleForms2(){var e=document.getElementById("AssignRole-UserType").value;let o=document.getElementById("assign-roles-other-fields-dynamic-form");o.innerHTML="",fetch("/api/app/template/assignrole/otherfields?category="+e).then(e=>e.text()).then(e=>{o.innerHTML=e}).catch(e=>{console.error("Error:",e),o.innerHTML='<div class="alert alert-danger">An error occurred.</div>'})}function setCookie(e,o,t){var s,n="";t&&((s=new Date).setTime(s.getTime()+24*t*60*60*1e3),n="; expires="+s.toUTCString()),document.cookie=e+"="+o+n+"; path=/"}function loadRolesForm(){var e=document.getElementById("manage-roles-operation").value;let o=document.getElementById("manage-roles-dynamic-form");o.innerHTML="","create"===e?fetch("/api/app/template/createrole?operation=create").then(e=>e.text()).then(e=>{o.innerHTML=e}).catch(e=>{console.error("Error:",e),o.innerHTML='<div class="alert alert-danger">An error occurred.</div>'}):"update"===e?fetch("/api/app/template/updaterole?operation=update").then(e=>e.text()).then(e=>{o.innerHTML=e}).catch(e=>{console.error("Error:",e),o.innerHTML='<div class="alert alert-danger">An error occurred.</div>'}):"delete"===e&&fetch("/api/app/template/deleterole?operation=delete").then(e=>e.text()).then(e=>{o.innerHTML=e}).catch(e=>{console.error("Error:",e),o.innerHTML='<div class="alert alert-danger">An error occurred.</div>'})}function manageRoleSubmitForm(e){var o=new FormData;let t;"create"===e?(o.append("roleName",document.getElementById("roleName").value),o.append("roleCategory",document.getElementById("roleCategory").value),o.append("description",document.getElementById("description").value),t="/api/app/role/create"):"update"===e?(o.append("roleId",document.getElementById("roleId").value),o.append("roleName",document.getElementById("roleName").value),o.append("description",document.getElementById("description").value),t="/api/app/role/update"):"delete"===e&&(o.append("roleId",document.getElementById("roleId").value),t="/api/app/role/delete"),fetch(t,{method:"POST",body:o}).then(e=>e.json()).then(e=>{document.getElementById("result");(e.success?new Toast("Success","now",e.message):new Toast("Failure","now",e.message)).show(),loadRolesForm()}).catch(e=>{console.error("Error:",e),new Toast("Error","now","An error occurred.").show(),loadRolesForm()})}$(document).ready(function(){console.log("Assign Faculty js loaded"),$("#studentSections").select2({placeholder:"Student Sections",allowClear:!0,width:"100%"})}),$(document).ready(function(){$("#classForm").on("submit",function(e){e.preventDefault();let o={faculty_id:$("#facultyId").val(),subject_code:$("#subjectCode").val(),batch:$("#batch").val(),department:$("#department").val(),semester:$("#semester").val(),section:$("#section").val(),student_sections:$("#studentSections").val(),year:$("#year").val()};console.log("Form Data:",o);e=new Dialog("Assigning Faculty","Are you sure you want to assign faculty to the selected sections? "+{formData:o});e.setButtons([{name:"Assign Faculty",class:"btn-success",onClick:function(e){$.ajax({url:"/api/app/create/assignfaculty",type:"POST",data:o,success:function(e){console.log("response",e.message),new Toast("Status","now",e.message).show(),$("#classForm").trigger("reset")},error:function(e,o,t){console.error("Error assigning faculty:",t),new Toast("Error","now","Error assigning faculty").show()}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-danger",onClick:function(e){$(e.data.modal).modal("hide")}}]),e.show()})}),$("#class-wise-year-report-btn").click(function(){var e=this.value,s=document.getElementById("test_name_class_wise_year").value,n=document.getElementById("batch_class_wise_year").value,a=document.getElementById("department_class_wise_year").value,r=document.getElementById("semester_class_wise_year").value,s=s.replace(/\s/g,"");new Toast("Report","Now","Report is being generated.").show(),$.ajax({url:"/generate_year_report_classwise",type:"POST",data:{test_id:e},xhrFields:{responseType:"blob"},success:function(e){var o=new Date,o=o.getFullYear()+("0"+(o.getMonth()+1)).slice(-2)+("0"+o.getDate()).slice(-2)+("0"+o.getHours()).slice(-2)+("0"+o.getMinutes()).slice(-2)+("0"+o.getSeconds()).slice(-2),e=(new Toast("Report","Success","Report generated successfully.").show(),URL.createObjectURL(e)),t=document.createElement("a");t.href=e,t.download=s+a+n+r+"_Report_"+o+".pdf",document.body.appendChild(t),t.click(),document.body.removeChild(t)},error:function(e,o,t){new Toast("Report","Error","An error occurred while generating the report.").show()}})}),$("#create-subjects").on("click",function(){var e,t=new FormData,s=$("#subjectFile")[0].files[0];s?(e=s.name.split(".").pop().toLowerCase(),-1===[".xls",".xlsx"].indexOf("."+e)?alert("Please upload a valid Excel file (.xls or .xlsx)"):((e=new Dialog("Creating Subjects","Are you sure you want to create new subjects? ")).setButtons([{name:"Create Subjects",class:"btn-primary",onClick:function(e){t.append("subjects_file",s);var o=new Toast("New","now","Creating subjects");o.show(),$.ajax({url:"/api/app/create/subjects",type:"POST",data:t,processData:!1,contentType:!1,success:function(e){console.log("Subjects created successfully:",e),(o=new Toast("Success","now",e.successCount+" Subjects created successfully")).show()},error:function(e){console.log("Error creating subjects:",e),alert("An error occurred while creating subjects. Please try again.")}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){console.log("Subject creation cancelled."),$(e.data.modal).modal("hide")}}]),e.show())):alert("Please select a file to upload.")}),$(document).ready(function(){console.log("create test js loaded [new]");let s=1;$("#subjectsContainer").on("click",function(e){var o,t;$(e.target).hasClass("addSubjectBtn")?(e.preventDefault(),o=$("#subjectTemplate").html(),(t=$("<div>").addClass("input-group mb-2")).html(`
                <select class="form-select" name="subjects[${s}][code]" required>
                    ${o}
                </select>
                <input type="date" class="form-control" name="subjects[${s}][date]" required>
                <button type="button" class="btn btn-danger removeSubjectBtn">-</button>
            `),$("#subjectsContainer").append(t),s++):$(e.target).hasClass("removeSubjectBtn")&&$(e.target).closest(".input-group").remove()})}),$(document).ready(function(){console.log("create test js loaded [form]"),$("#createTestForm").on("submit",function(e){e.preventDefault();let s={testname:$("#testname").val(),month:$("#month").val(),batch:$("#batch").val(),semester:$("#semester").val(),year:$("#year").val(),department:$("#department").val(),subjects:[],duration:$("#duration").val(),totalmarks:$("#totalmarks").val(),passmarks:$("#passmarks").val(),instructions:$("#instructions").val()};$("#subjectsContainer .input-group").each(function(e){var o=$(this).find('select[name^="subjects"]').val(),t=$(this).find('input[type="date"]').val();o&&t&&s.subjects.push({subject_code:o,date:t})}),console.log(s);e=new Dialog("Creating Test","Are you sure you want to create this test? "+{formData:s});e.setButtons([{name:"Create Test",class:"btn-success",onClick:function(e){$.ajax({url:"/api/app/create/createtest",type:"POST",data:s,success:function(e){console.log("response",e.message),new Toast("Status","now",e.message).show(),$("#createTestForm").trigger("reset")},error:function(e,o,t){console.error("Error creating test:",t),new Toast("Error","now","Error creating test").show()}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-danger",onClick:function(e){$(e.data.modal).modal("hide")}}]),e.show()})}),$("#create-users").on("click",function(){var t=new FormData,s=$('input[name="userType"]:checked').val(),n=$('input[name="role"]:checked').val(),a=$("#formFile")[0].files[0];if("multiple"===s){if(!a)return void alert("Please select a file to upload.");var e=a.name.split(".").pop().toLowerCase();if(-1===[".xls",".xlsx"].indexOf("."+e))return void alert("Please upload a valid Excel file (.xls or .xlsx)")}e=new Dialog("Creating User Profiles","Are you sure you want to create new users");e.setButtons([{name:"Create User",class:"btn-primary",onClick:function(e){t.append("userType",s),t.append("role",n),t.append("users_file",a);var o=new Toast("New","now","Creating profiles");o.show(),$.ajax({url:"/api/app/create/users",type:"POST",data:t,processData:!1,contentType:!1,success:function(e){console.log("User created successfully:",e),(o=new Toast("Success","now",e.successCount+" Users created successfully")).show()},error:function(e){console.log("Error creating user:",e),alert("An error occurred while creating the user. Please try again.")}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){console.log("User creation cancelled."),$(e.data.modal).modal("hide")}}]),e.show()}),$(document).ready(function(){console.log("enrollmennt js loaded"),$("#enroll-subjects").select2({placeholder:"Select subjects",allowClear:!0,width:"100%"})}),$("#fetch-students-btn").on("click",function(e){e.preventDefault(),console.log("fetch-students-btn clicked");var o=new FormData($("#subject-selection-form")[0]);(o.getAll("subjects[]").length?((e=new Dialog("Fetching Students","Are you sure you want to fetch students for the selected subjects?")).setButtons([{name:"Fetch Students",class:"btn-primary",onClick:function(e){new Toast("Fetching","now","Fetching students").show(),$.ajax({url:"/api/app/template/enrollsubstud",type:"POST",data:o,processData:!1,contentType:!1,success:function(e){console.log("Students fetched successfully:",e),new Toast("Success","now","Students fetched successfully").show(),$("#subjects-list-container").empty(),"string"==typeof e?$("#subjects-list-container").append(e):e&&e.html?$("#subjects-list-container").append(e.html):console.error("Unexpected response format:",e),$("#subjects-list-container").show()},error:function(e){(errortoast=new Toast("Failed","now","Students not found")).show(),console.error("Error fetching students:",e)}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){new Toast("Cancelled","now","Fetching students cancelled").show(),$(e.target).closest(".modal").modal("hide")}}]),e):new Toast("Error","now","Please select subjects")).show()}),$(document).ready(function(){setInterval(function(){var e=$("#footer-text-1"),o=$("#footer-text-2");e.is(":visible")?e.fadeOut("slow",function(){o.fadeIn("slow")}):o.fadeOut("slow",function(){e.fadeIn("slow")})},5e3)}),$(document).ready(function(){$("#signOutBtn").on("click",function(e){e.preventDefault();e=new Dialog("Sign out Confirmation","Are you sure you want to sign out?");e.setButtons([{name:"Sign Out",class:"btn-danger",onClick:function(e){$.ajax({url:"/api/auth/logout",type:"POST",success:function(e){window.location.href="/"},error:function(e){alert("Error signing out. Please try again.")}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-success",onClick:function(e){console.log("User canceled sign out."),$(e.data.modal).modal("hide")}}]),e.show()})}),$("#generateExcel-btn").click(function(){var e=new FormData,t=$("#batch").val(),s=$("#semester").val(),n=$("#section").val(),a=$("#subject_code").val(),r=$("#department").val(),l=$("#test_name").val(),o=$("#faculty_id").val();e.append("batch",t),e.append("semester",s),e.append("section",n),e.append("subject_code",a),e.append("department",r),e.append("test_name",l),e.append("faculty_id",o),console.log(t,s,n,a,r,l,o),console.log(e),$.ajax({url:"/generate_class_sub_excel",type:"POST",data:e,processData:!1,contentType:!1,xhrFields:{responseType:"blob"},success:function(e){var e=window.URL.createObjectURL(e),o=document.createElement("a");o.href=e,o.download="report_"+t+"_"+s+"_"+n+"_"+a+"_"+r+"_"+l+".xlsx",o.click(),window.URL.revokeObjectURL(e)},error:function(e,o,t){console.error("Error:",t)}})}),$(document).ready(function(){let r="/api/app/permission",s=$("#permissionForm"),n=$("#permissionsTable"),l=!1,i=null;function c(e){n.find(`tr[data-id="${e.permission_id}"]`).remove();e=`
                <tr data-id="${e.permission_id}">
                    <td>${e.permission_name}</td>
                    <td>${e.description}</td>
                    <td>${e.permission_category}</td>
                    <td>
                        <button class="btn btn-warning btn-sm editPermission" data-id="${e.permission_id}" data-name="${e.permission_name}">Edit</button>
                        <button class="btn btn-danger btn-sm deletePermission" data-id="${e.permission_id}" data-name="${e.permission_name}">Delete</button> 
                    </td>
                </tr>
            `;n.prepend(e)}function d(){s[0].reset()}$(s).on("submit",function(e){e.preventDefault();let o=document.getElementById("permission_name").value,t=document.getElementById("description").value,s=document.getElementById("permission_category").value,n={permission_name:o,description:t,permission_category:s};var a;l?(n.permission_id=i||null,(a=new Dialog("Update Permission",'<div style="font-size: 16px; line-height: 1.6;"><strong>Are you sure you want to update the permission as below?</strong><br><br><strong>Permission Name:</strong> '+o+"<br><strong>Description:</strong> "+t+"<br><strong>Permission Category:</strong> "+s+"<br></div>")).setButtons([{name:"Update",class:"btn-primary",onClick:function(e){$.ajax({url:r+"/update",method:"POST",data:n,success:function(e){new Toast("now","success",e.message).show();e={permission_name:o,description:t,permission_category:s,permission_id:e.permission_id};console.log(e),c(e),d(),$('#permissionForm button[type="submit"]').text("Create"),l=!1,i=null,$("#cancelPermission").remove()},error:function(e){let o="An error occurred";o=409===e.status?"No changes Made.":500===e.status?"Please try again later.":e.responseJSON?.message||"Unknown error occurred.",new Toast("now","error",o).show(),console.error("Error creating permission:",e),d(),$('#permissionForm button[type="submit"]').text("Create"),l=!1,i=null,$("#cancelPermission").remove()}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){d(),$('#permissionForm button[type="submit"]').text("Create"),l=!1,i=null,$("#cancelPermission").remove(),$(e.data.modal).modal("hide")}}])):(a=new Dialog("Create Permission",'<div style="font-size: 16px; line-height: 1.6;"><strong>Are you sure you want to create the permission below?</strong><br><br><strong>Permission Name:</strong> '+o+"<br><strong>Description:</strong> "+t+"<br><strong>Permission Category:</strong> "+s+"<br></div>")).setButtons([{name:"Create",class:"btn-primary",onClick:function(e){$.ajax({url:r+"/create",method:"POST",data:n,success:function(e){new Toast("now","success",e.message).show();e={permission_name:o,description:t,permission_category:s,permission_id:e.permissionId};c(e)},error:function(e){let o="An error occurred";o=409===e.status?"The permission already exists.":500===e.status?"Please try again later.":e.responseJSON?.message||"Unknown error occurred.",new Toast("now","error",o).show(),console.error("Error creating permission:",e)}}),d(),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){d(),$(e.data.modal).modal("hide")}}]),a.show()}),$(document).on("click",".editPermission",function(){var o,e=$(this).data("id"),e=($(this).data("name"),o=e),t=function(e){console.log("permission_name: "+e.permission_name),console.log("description: "+e.description),$("#permission_name").val(e.permission_name),$("#description").val(e.description),$("#permission_category").val(e.permission_category),l=!0,i=o,$('#permissionForm button[type="submit"]').text("Update"),$("#cancelPermission").length||$("#permissionForm").append('<button type="button" class="btn btn-secondary" id="cancelPermission" style="display:inline-block">Cancel</button>'),$("html, body").animate({scrollTop:s.offset().top},500)};e={permission_id:o},$.ajax({url:"/api/app/permission/get/by/id",method:"POST",data:e,success:function(e){console.log(e),t({permission_name:e.permission_name,description:e.description,permission_category:e.permission_category})},error:function(){new Toast("now","error","An error occurred").show()}})}),$(document).on("click","#cancelPermission",function(){console.log("Cancel button clicked"),d(),$('#permissionForm button[type="submit"]').text("Create"),l=!1,i=null,$("#cancelPermission").remove()}),$(document).on("click",".deletePermission",function(){var e=$(this).data("id"),o=$(this).data("name"),t=e,e=o;(e=new Dialog("Delete Permission","Are you sure you want to delete the permission "+e+"?")).setButtons([{name:"Delete",class:"btn-danger",onClick:function(e){var o;$.ajax({url:r+"/delete",method:"POST",data:{permission_id:t},success:function(){new Toast("now","success","Permission deleted successfully").show()},error:function(e,o,t){console.error("Error deleting permission"),new Toast("now","error","An error occurred").show()}}),o=t,n.find(`tr[data-id="${o}"]`).remove(),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){$(e.data.modal).modal("hide")}}]),e.show()})}),$(document).ready(function(){$("#student-select").on("change",function(){var e=this.options[this.selectedIndex],o=e.dataset.regno,t=e.dataset.name,e=e.dataset.marks;$("#reg-no").val(o),$("#student-name").val(t),$("#current-marks").val(e),$("#update-form").removeClass("d-none")}),$("#reset-btn").on("click",function(){$("#student-select").val(""),$("#update-form").addClass("d-none")}),$("#update-btn").on("click",function(){var e=$("#reg-no").val(),t=$("#updated-marks").val(),s=$("#update-form"),n=s.data("batch"),a=s.data("semester"),r=s.data("subject_code"),l=s.data("testname"),i=s.data("section"),s=s.data("department");if(console.log(e,t,n,a,r,l,i,s),t.trim()){(updatingToast=new Toast("Updating","now","Updating marks")).show();let o=new FormData;o.append("reg_no",e),o.append("new_mark",t),o.append("batch",n),o.append("semester",a),o.append("subject_code",r),o.append("testname",l),o.append("section",i),o.append("department",s);e=new Dialog("Update Marks","Are you sure to update mark as "+t+"?");e.setButtons([{name:"Update Mark",class:"btn-success",onClick:function(e){$.ajax({url:"/api/app/update/updatemark",type:"POST",data:o,processData:!1,contentType:!1,success:function(e){console.log("Marks updated successfully:",e),new Toast("Success","now","Marks updated successfully").show(),$("#update-form").find("input").val(""),$("#student-select").val("").trigger("change"),$("#update-form").addClass("d-none")},error:function(e){console.error("Error updating marks:",e),(errortoast=new Toast("Failed","now","Marks not updated")).show()}}),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){new Toast("Cancelled","now","Update Marks Cancelled").show(),$(e.data.modal).modal("hide")}}]),e.show()}else alert("Please enter new marks.")}),$("#back-btn").on("click",function(){window.history.back()}),$("#edit-back-btn").on("click",function(){window.history.back()})}),Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]')).forEach(e=>{new bootstrap.Tooltip(e)}),$(document).ready(function(){let o=$(".sidebar-cus"),t=$(".sidebar-expand"),s=$(".sidebar-overlay");t.click(function(){o.toggleClass("visible"),s.toggleClass("visible")}),$(document).click(function(e){o.is(e.target)||o.has(e.target).length||t.is(e.target)||t.has(e.target).length||(o.removeClass("visible"),s.removeClass("visible"))}),o.click(function(e){e.stopPropagation()}),t.click(function(e){e.stopPropagation()})}),$(document).ready(function(){console.log("Role Permission Manage JS Loaded [updated]");let a=[],r=[];async function o(e=""){return console.log("Loading Permissions"),$("#permissions-container").empty(),a=[],$.ajax({url:"/api/app/permission/get/all",method:"POST",data:{search:e},success:function(e){a=e.map(e=>({id:e._id.$oid,name:e.permission_name,category:e.permission_category,description:e.description})),console.log("Permissions Data Loaded:",a)},error:function(e){console.error("Error fetching permissions:",e)}})}function t(){console.log("Generating Permissions UI");let t=r.map(e=>e.id);var e,o=a.reduce((e,o)=>(e[o.category]=e[o.category]||[],e[o.category].push(o),e),{}),s=$("#permissions-container");for(e in s.empty(),o){var n=o[e],n=`
                <div class="mb-3">
                    <ul class="list-unstyled">
                        <li>
                            <button type="button" class="btn w-100 text-start" data-bs-toggle="collapse" data-bs-target="#category-${e}">
                                <i class="fas fa-chevron-right" id="arrow-${e}"></i> ${e}
                            </button>
                            <div id="category-${e}" class="collapse mb-3 show">
                                <ul class="list-unstyled ms-4">
                                    ${n.map(e=>{var o=t.includes(e.id)?"checked":"";return`
                                            <li>
                                                <div class="form-check">
                                                    <input class="form-check-input permission-checkbox" type="checkbox" name="permissions[]" 
                                                        value="${e.id}" id="perm-${e.id}" ${o}>
                                                    <label class="form-check-label" for="perm-${e.id}" data-bs-toggle="tooltip" 
                                                        data-bs-placement="right" title="${e.description}">
                                                        ${e.name}
                                                    </label>
                                                </div>
                                            </li>
                                        `}).join("")}
                                </ul>
                            </div>
                        </li>
                    </ul>
                </div>`;s.append(n)}$('[data-bs-toggle="tooltip"]').tooltip()}function s(e=0){r=(a=(1==e||$("#rolePermissionForm").trigger("reset"),$("#permissions-container").empty(),[]),[])}$("#permission-role").on("change",function(){let e=$(this).val();console.log("Role Changed to:",e),s(1),(async()=>{try{console.log("Loading role and permissions"),await Promise.all([(async e=>(console.log("Loading Role Permissions"),r=[],$.ajax({url:"/api/app/permission/get/by/role",method:"POST",data:{roleId:e},success:function(e){e.success&&Array.isArray(e.permission)?(r=e.permission.map(e=>({id:e.id,name:e.name,category:e.category,description:e.description})),console.log("Role Permissions Loaded:",r)):console.error("Invalid response structure:",e)},error:function(e){console.error("Error fetching role permissions:",e)}})))(e),o()]),console.log("Permissions and Role Data Loaded"),t()}catch(e){console.error("Error loading role and permissions:",e),o().then(()=>t())}})()}),$("#role-permission-search").on("input",function(){let s=$(this).val().toLowerCase();$("#permissions-container .mb-3").each(function(){var e=$(this),o=e.find(".form-check");let t=!1;o.each(function(){var e=$(this).find("label").text().toLowerCase().includes(s);$(this).toggle(e),e&&(t=!0)}),t?(e.show(),e.find(".collapse").collapse("show")):e.hide()})}),$("#rolePermissionForm").on("submit",function(e){e.preventDefault();var e=$("#permission-role").val(),o=$("input[name='permissions[]']:checked").map(function(){return $(this).val()}).get();let t=new FormData;t.append("roleId",e),o.forEach(e=>{t.append("permissionsID[]",e)}),$.ajax({url:"/api/app/permission/grant",method:"POST",processData:!1,contentType:!1,data:t,success:function(e){console.log("Permissions updated successfully:",e);var o=new Toast("now"," success","Permissions updated successfully");0<e.message.length&&(e=e.message.map(function(e){return e.name}),(e=new Dialog("Success Details",`<h6>Current Permissions for Role: ${$("#permission-role").find("option:selected").data("name")} </h6>
                                         <ul>
                                             <li>${e.join("</li><li>")}</li>
                                         </ul>`)).setButtons([{name:"Close",class:"btn-primary",onClick:function(e){$(e.data.modal).modal("hide")}}]),e.show()),s(),o.show()},error:function(e){console.error("Error saving permissions:",e),new Toast("now"," error","Error saving permissions").show()}})})}),console.log("sidebar.js loaded"),Array.from(document.querySelectorAll('[data-bs-toggle="tooltip"]')).forEach(e=>{new bootstrap.Tooltip(e),console.log("tooltipTriggerEl:",e)}),$(document).ready(function(){function r(e,o){console.log("Loading Roles");var t=new FormData;t.append("category",e),t.append("user_id",o),$.ajax({url:"/api/app/template/userrole",method:"POST",data:t,processData:!1,contentType:!1,success:function(e){console.log("Roles fetched successfully"),l("Roles","Roles Fetched Successfully"),$("#roles-container").html(e),$('[data-bs-toggle="tooltip"]').tooltip(),console.log("Roles Loaded")},error:function(e,o,t){console.error("Error fetching roles:",t),l("Error","Failed to fetch roles.")}})}function l(e,o){new Toast("now",e,o).show()}function i(){$("#role-user-id").val(""),$("#user-info").html(""),$("#roles-container").html(""),console.log("Removing Submit Button"),$("#user-role-submit").removeClass("d-block"),$("#user-role-submit").addClass("d-none")}console.log("User Role Manage JS Loaded"),$("#user-role-category").on("change",function(){console.log("Category Changed:",$(this).val()),i()}),$("#role-fetch-user").on("click",function(){console.log("User Role Fetch Button Clicked"),$("#user-info").html(""),$("#roles-container").html("");let n=$("#role-user-id").val(),a=$("#user-role-category").val();if(a)if(n){var o=new FormData;let e="";if(o.append("category",a),"faculty"===a)o.append("facultyId",n),e="/api/app/get/faculty";else{if("student"!==a)return void console.error("Invalid category selected.");o.append("regNo",n),e="/api/app/get/student"}fetch(e,{method:"POST",body:o}).then(o=>o.ok?o.json():o.json().then(e=>{throw console.error("Error fetching user details:",e.message||"Unknown error occurred"),l("Error",e.message||"Error fetching user details"),new Error(`HTTP Error ${o.status}: `+o.statusText)})).then(t=>{if(!t._id)throw new Error("Unexpected response structure");{l("User Details","User Fetched Successfully");var s=`
                                <div class="col-md-12">
                                    <p><strong>Name:</strong> <em>${t.name}</em></p>
                                    <p><strong>Email:</strong> <em>${t.email}</em></p>
                                    <p><strong>Department:</strong> <em>${t.department||"N/A"}</em></p>
                                    <p><strong>Designation:</strong> <em>${t.designation||"N/A"}</em></p>
                                    <p><strong>Role:</strong> <em>${t.role||"N/A"}</em></p>
                                </div>
                    `;let o=`
                <strong>Name: </strong> ${t.name}</em>, 
                <strong>Department: </strong> ${t.department||"N/A"}</em>, 
                <strong>Role: </strong> ${t.role||"N/A"}</em>
                `,e=new Dialog("User Details",s);e.setButtons([{name:"Confirm",class:"btn-success",onClick:function(e){$("#user-info").html(o),r(a,n),console.log("Enabling Submit Button"),$("#user-role-submit").removeClass("d-none"),$("#user-role-submit").addClass("d-block"),$(e.data.modal).modal("hide")}},{name:"Cancel",class:"btn-secondary",onClick:function(e){i(),$(e.data.modal).modal("hide")}}]),e.show()}}).catch(e=>{console.error("Fetch error:",e)})}else console.error("User ID/Registration No cannot be empty.");else console.error("Please select a category first.")}),$("#user-role-submit").on("click",function(e){console.log("User Role Submit Button Clicked");let t=$("#user-role-category").val(),s=$("#role-user-id").val();if(t)if(s){var n=$("input[name='role[]']:checked").map(function(){return $(this).val()}).get();0===n.length&&(console.error("No roles selected."),n=[]),console.log("Selected Category:",t),console.log("Selected User ID:",s),console.log("Selected Roles:",n);let o=new FormData;o.append("category",t),o.append("user_id",s),n.forEach(e=>{o.append("roles_id[]",e)}),console.log("Submitting form data:",o),$.ajax({url:"/api/app/role/set",method:"POST",contentType:!1,processData:!1,data:o,success:function(e){e&&e.message&&0!==e.message.length?(console.log("Roles assigned successfully:",e),l("Success","Roles assigned successfully!"),Array.isArray(e.result)&&0<e.result.length?(e=e.result.map(function(e){return e.name}),(e=new Dialog("Success",`<h6>Current Roles for User: ${$("#role-user-id").val()} </h6>
                        <ul>
                            ${e.map(e=>`<li>${e}</li>`).join("")}
                        </ul>`)).setButtons([{name:"Close",class:"btn-info",onClick:function(e){$(e.data.modal).modal("hide")}}]),e.show(),r(t,s)):((e=new Dialog("Success",`<h6>Current Roles for User: ${$("#role-user-id").val()} </h6>
                        <p>No Roles Assigned</p>`)).setButtons([{name:"Close",class:"btn-secondary",onClick:function(e){$(e.data.modal).modal("hide")}}]),e.show())):l("Success","No roles assigned")},error:function(e,o,t){console.error("Error assigning roles:",t),l("Error","Failed to assign roles. Please try again.")}})}else console.error("User ID/Registration No cannot be empty.");else console.error("Please select a category first.")})});
//# sourceMappingURL=app.min.js.map